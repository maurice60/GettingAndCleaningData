help.start()
x <= rnorm(50)
x <- rnorm(50)
y <- rnorm(x)
plot(x, y)
ls()
rm(x,y)
x <- 1:20
w <- 1 + sqrt(x)/2
dummy <- sata.frame(x=x, y=x+rnorm(x)*w)
dummy <- data.frame(x=x, y=x+rnorm(x)*w)
dummy
fm <- lm(y~x, data=dummy)
summary(fm)
fml <- lm(y~x, data=dummy, weight=1/w^2)
summary(fml)
attach(dummy)
lrf <- lowess(x,y)
plot(x,y)
lines(x, lrf$y)
abline(0, 1, lty=3)
abline(coef(fm))
abline(coef(fml), col='red')
detach
plot(fitted(fm), resid(fm), xlab='Fitted Values', ylab='Residuals', main='Residuals vs. Fitted')
qqnorm(resid(fm), main='Residuals Rankit Plot')
rm(fm,fml,lrf,x,dummy)
filepath <- system.file('data', 'morely.tab', package='datasets')
filepath
file.show(filepath)
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
on.exit(dbDisconnect(con))
rs <- dbGetQuery(con, sql)
ls()
l
plot(rs)
source('~/.active-rstudio-document')
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
rs
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
lines(rs$dateOfReadings, rs$bpSystolic)
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
source('~/dbTest.R')
hist(rs$bpDiastolic)
source('~/dbTest.R')
install.packages("swirl")
library(swirl)
swirl()
c(.5, 55,-10,6)
num_vect <-  c(.5, 55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
ny_char <- c("my","name", "is")
my_char <- c("my","name", "is")
my_char <- c("My","name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Maurice")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
install.packages("swirl")
library(swirl)
swirl()
x
x[1:10]
x[is.na(s)]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11,
| bar = 2, norf = NA)
vect <- c(foo = 11,bar = 2, norf = NA)
vect
names(vect)
vect2 with c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim my_vector(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes()
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data)
colnames(my_data) <- cnames
my_data
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x,y)
x<-1:4
y<-2:3
x+y
type(x+y)
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
?csv
?read
?file
?readcsv
read.csv("/Users/maurice/Downloads/hw1_data.csv", rows=2)
read.csv("/Users/maurice/Downloads/hw1_data.csv", nrows=2)
read.csv("/Users/maurice/Downloads/hw1_data.csv")
hw1 <- read.csv("/Users/maurice/Downloads/hw1_data.csv")
hw1[47]
hw1[c(47)]
hw1[1;5]
hw1[1:5]
hw1[1]
hw1[1,47]
is.na(hw1[1})
is.na(hw1[1])
sum(is.na(hw1[1]))
hw1[!is.na(hw1[1])]
hw1
hw1$ozone
hw1$Ozone
hw1$Ozone[47]
hw1$Ozone[!is.na[hw1$Ozone]]
hw1$Ozone[!is.na(hw1$Ozone)]
mean(hw1$Ozone[!is.na(hw1$Ozone)])
hw1["Ozone" > 31]
hw1[Ozone > 31]
hw1[[Ozone > 31]]
hw1[["Ozone" > 31]]
hw1[,"Ozone" > 31]
hw1[,"Ozone"]
hw1[hw1$ozone > 31]
hw1[hw1$Ozone > 31]
hw1[hw1$Ozone == 31]
hw1[,hw1$Ozone == 31]
hw1[hw1$Ozone > 31]
hw1[hw1$Ozone]
oz <- hw1$Ozone > 31
hw1[oz]
hw1[[oz]]
case.complete(hw1$Ozone & hw1$Temp)
complete.cases(hw1$Ozone & hw1$Temp)
hw1ext <- hw1[complete.cases(hw1$Ozone & hw1$Temp)]
cc <- complete.cases(hw1$Ozone & hw1$Temp)
hw1[cc]
hw1[,cc]
hw1[,cc][1:5]
hw1[cc][1:5]
hw1[cc,][1:5]
hw1[cc,]
hw1[cc,]["Ozone" > 31]
hw1n <- hw1[cc,]
hw1n["Ozone" > 31]
hw1n["Ozone" > 31,]
hw1n[,"Ozone" > 31]
hw1n["Ozone" > 31,]
x <- hw1n["Ozone" > 31,]
x
hw1n$Ozone[hw1n$Ozone] > 31
hw1n$Ozone[hw1n$Ozone > 31]
hw1$Ozone[hw1$Ozone > 31]
oz <- hw1n$Ozone[hw1n$Ozone > 31]
oz <- hw1n[hw1n$Ozone] > 31
oz <- hw1n$Ozone[hw1n$Ozone] > 31
x
hw1$Ozone[hw1$Ozone > 31]
hw1n$Ozone[hw1n$Ozone] > 31
x <- hw1n$Ozone[hw1n$Ozone] > 31
y <- hw1n$Temp[hw1$Temp] > 90
hw1n[x&y]
y <- hw1n$Temp[hw1n$Temp] > 90
hw1n[x&y,]
hw1n[hw1n$Ozone > 31]
hw1n[hw1n$Ozone > 31,]
hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,]
hw1n[(hw1n$Ozone > 31) & (hw1n$Temp > 90),]
mean("Solar.R", hw1n[(hw1n$Ozone > 31) & (hw1n$Temp > 90),])
?mean
mean(hw1$Ozone[!is.na(hw1$Ozone)])
dd <- hw1n[(hw1n$Ozone > 31) & (hw1n$Temp > 90),]
mean(dd$Solar.R)
hw1[hw1$month == 6]
hw1[hw1$month == 7]
hw1[hw1$Month == 6]
hw1[hw1$Month == 6,]
mean(hw1[hw1$Month == 6,])
dd <= hw1[hw1$Month == 6,]
hw1[hw1$Month == 6,]
dd <- hw1[hw1$Month == 6,]
mean(dd$Temp)
dd <- hw1[hw1$Month == 5,]
max{dd$Ozone}
max(dd$Ozone)
dd
dd <- hw1n[hw1n$Month == 5,]
max(dd$Ozone)
x <- c(4, TRUE)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
hw1[1:2]
hw1[1:2,]
hw1[c(152,153),]
hw1[47,]
hw1[47,hw1$Ozone]
hw1[47,Ozone]
is.na(hw1$Ozone)
sum(is.na(hw1$Ozone))
hw1$Ozone[!is.na(hw1$Ozone)]
mean(hw1$Ozone[!is.na(hw1$Ozone)])
hw1n
hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,]
mean(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,][Solar.R])
mean(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,][hw1n.Solar.R])
sr <- hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,]
mean(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,][hw1n$Solar.R])
mean(sr$Sloar.R)
mean(sr$Solar.R)
x <- c(4, "a", TRUE)
x <- list(2, "a", "b", TRUE)
x[[2]]
u <- x[[2]]
mean(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90, hw1n$Solar.R])
colMeans(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,], hw1n$Solar)
colMeans(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,])
colMeans(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,], dims=2)
colMeans(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,], dims=1)
colMeans(hw1n[hw1n$Ozone > 31 & hw1n$Temp > 90,])
colMeans(hw1n[hw1$Ozone > 31 & hw1n$Temp > 90,], TRUE)
colMeans(hw1[hw1$Ozone > 31 & hw1$Temp > 90,], TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
library(rhdf5)
cr = h5createFile("example.h5")
cr
cachemean <- function(x, ...) {
source('~/.active-rstudio-document')
source('~/Documents/R_Programming/cachemean.R')
;
<
source('~/Documents/R_Programming/cachemean.R')
makeVector()
v <- 1:20
cachemean(v)
cachemean(x)
v <- makeVector(1:20)
cachemean(v)
cachemean(v)
w <- makeVector(rnorm(20))
w
cachemean(w)
cachemean(w)
source('~/Documents/R_Programming/cachemean.R')
cachemean(w)
w <- makeVector(rnorm(20000))
cachemean(w)
cachemean(w)
source('~/Documents/R_Programming/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(1:4, 2, 2)
mat
solve(mat)
inv <- solve(mat)
mat * inv
mat . inv
mat %*% inv
x <- makeCacheMatrix(mat)
cacheSolve(x)
cacheSolve(x)
x %*% cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
y <- cacheSolve(x)
x %*% y
y
x
mat %*% y
source('~/Documents/R_Programming/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/R_Programming/ProgrammingAssignment2/cachematrix.R')
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
myapp <- oauth_app("github", "56b637a5baffac62cad9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "8df394941c426ad96a6a", "adde12dd07152c32337ecc671843b1b5c4a46b84")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
oauth_endpoints("github")
myapp <- oauth_app("github", "8df394941c426ad96a6a", "adde12dd07152c32337ecc671843b1b5c4a46b84")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
GET
GET()
GET(myapp)
GET("https://api.github.com/users/jtleek/repos")
rep <- GET("https://api.github.com/users/jtleek/repos")
rep$id
names(rep)
rep$times
rep$content
names(rep)
rep$url
rep$config
rep$headers
names(rep)
rep$handle
rep <- GET("https://api.github.com/users/jtleek/repos")
rep1 <- content(rep)
install.packages("jsonlite")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
rep1 <- content(rep)
json = jsonlite::fromJSON(toJSON(rep1))
json[1]
names(json)
json$name
json$created_at
data.table(json)
data.frame(json)
data.frame(json$name, json$created_at)
data.frame(delist(json$name), delist(json$created_at))
data.frame(unlist(json$name), unlist(json$created_at))
acs <- load.csv("/usr/maurice/downloads/getdata_data_ss06pid.csv")
acs <- read.csv("/usr/maurice/downloads/getdata_data_ss06pid.csv")
acs <- read.csv("/users/maurice/downloads/getdata_data_ss06pid.csv")
install.packages("sqldf")
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
sqldf("select * from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[c(10,20,30,100),]
htmlCode[c(10,20,30,100)]
nchar(htmlCode[c(10,20,30,100)])
wid = c(11, 9, 4, 9, 4, 26)
dat <- read.fwf("", wid)
dat <- read.fwf("/users/maurice/downloads/wksst8110.for", wid)
dat
names(dat)
names[,"V4"]
head(dat)
wid = c(10, 9, 4, 9, 4, 26)
dat <- read.fwf("/users/maurice/downloads/wksst8110.for", wid)
head(dat)
dat <- read.fwf("/users/maurice/downloads/wksst8110.for", wid, skip=4)
head(dat)
sum(dat)
dat[,V4]
dat[,"V4"]
sum(dat[,"V4"])
summary(dat[,"V4"])
library("jpeg", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:lattice", unload=TRUE)
img <-readJPEG('jeff.jpg')
img <-readJPEG("jeff.jpg")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?BiocUpgrade
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
setwd("~/Documents/R_Programming/Getting and Cleaning Data/GettingAndCleaningData")
source('~/Documents/R_Programming/Getting and Cleaning Data/GettingAndCleaningData/run_analysis.R')
source('~/Documents/R_Programming/Getting and Cleaning Data/GettingAndCleaningData/run_analysis.R')
source('~/Documents/R_Programming/Getting and Cleaning Data/GettingAndCleaningData/run_analysis.R')
file.write(datOutput, file="summary.txt")
write.table(datOutput, file="summary.txt")
source('~/Documents/R_Programming/Getting and Cleaning Data/GettingAndCleaningData/run_analysis.R')
